[project]
name = "ai-mem"
version = "1.0.0"
description = "AI Memory Management CLI for team collaboration with Claude Code integration"
readme = "README.md"
authors = [
    {name = "AI-Mem Team", email = "dev@agenticinsights.com"},
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Documentation",
    "Topic :: Text Processing",
]
keywords = ["ai", "memory", "collaboration", "claude-code", "thoughts", "knowledge-management"]
requires-python = ">=3.11"
dependencies = [
    "click>=8.1.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "cookiecutter>=2.4.0",
    "gitpython>=3.1.0",
    "pathlib>=1.0.0",
    "platformdirs>=3.0.0",
    "pyyaml>=6.0",
    "watchdog>=3.0.0",
    "colorama>=0.4.6",
    "requests>=2.28.0",
    "sentence-transformers>=2.2.0",
]

[project.scripts]
ai-mem = "ai_mem.cli:main"
aimem = "ai_mem.cli:main"

[project.urls]
Homepage = "https://github.com/killerapp/ai-mem"
Documentation = "https://github.com/killerapp/ai-mem#readme"
Repository = "https://github.com/killerapp/ai-mem"
Issues = "https://github.com/killerapp/ai-mem/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "python-semantic-release>=9.0.0",
    "build>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.semantic_release]
version_variables = [
    "ai_mem/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:project.version",
]
build_command = "python -m build"
commit_message = "chore(release): {version} [skip ci]\n\nAutomatically generated by python-semantic-release"
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.commit_parser_options]
major_tags = ["BREAKING CHANGE", "BREAKING-CHANGE"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
